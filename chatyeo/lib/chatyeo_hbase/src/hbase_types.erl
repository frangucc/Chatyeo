%%
%% Autogenerated by Thrift
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(hbase_types).

-include("hbase_types.hrl").

-export([struct_info/1]).
%% struct tCell

% -record(tCell, {value, timestamp}).

struct_info('tCell') ->
  {struct, [{1, string},
  {2, i64}]}
;

%% struct columnDescriptor

% -record(columnDescriptor, {name, maxVersions, compression, inMemory, maxValueLength, bloomFilterType, bloomFilterVectorSize, bloomFilterNbHashes, blockCacheEnabled, timeToLive}).

struct_info('columnDescriptor') ->
  {struct, [{1, string},
  {2, i32},
  {3, string},
  {4, bool},
  {5, i32},
  {6, string},
  {7, i32},
  {8, i32},
  {9, bool},
  {10, i32}]}
;

%% struct tRegionInfo

% -record(tRegionInfo, {startKey, endKey, id, name, version}).

struct_info('tRegionInfo') ->
  {struct, [{1, string},
  {2, string},
  {3, i64},
  {4, string},
  {5, byte}]}
;

%% struct mutation

% -record(mutation, {isDelete, column, value}).

struct_info('mutation') ->
  {struct, [{1, bool},
  {2, string},
  {3, string}]}
;

%% struct batchMutation

% -record(batchMutation, {row, mutations}).

struct_info('batchMutation') ->
  {struct, [{1, string},
  {2, {list, {struct, {'hbase_types', 'mutation'}}}}]}
;

%% struct tRowResult

% -record(tRowResult, {row, columns}).

struct_info('tRowResult') ->
  {struct, [{1, string},
  {2, {map, string, {struct, {'hbase_types', 'tCell'}}}}]}
;

%% struct iOError

% -record(iOError, {message}).

struct_info('iOError') ->
  {struct, [{1, string}]}
;

%% struct illegalArgument

% -record(illegalArgument, {message}).

struct_info('illegalArgument') ->
  {struct, [{1, string}]}
;

%% struct notFound

% -record(notFound, {message}).

struct_info('notFound') ->
  {struct, [{1, string}]}
;

%% struct alreadyExists

% -record(alreadyExists, {message}).

struct_info('alreadyExists') ->
  {struct, [{1, string}]}
;

struct_info('i am a dummy struct') -> undefined.
